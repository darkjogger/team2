{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.refCountDelay = refCountDelay;\n\nvar _rxjs = require(\"rxjs\"); // Copyright 2017-2020 @polkadot/rpc-core authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\n\nconst DELAY = 1750;\n/** @internal */\n\nfunction refCountDelayInner(source) {\n  // state: 0 = disconnected, 1 = disconnecting, 2 = connecting, 3 = connected\n  let [state, refCount, connection, scheduler] = [0, 0, _rxjs.Subscription.EMPTY, _rxjs.Subscription.EMPTY];\n  return new _rxjs.Observable(ob => {\n    source.subscribe(ob);\n\n    if (refCount++ === 0) {\n      if (state === 1) {\n        scheduler.unsubscribe();\n      } else {\n        connection = source.connect();\n      }\n\n      state = 3;\n    }\n\n    return () => {\n      if (--refCount === 0) {\n        if (state === 2) {\n          state = 0;\n          scheduler.unsubscribe();\n        } else {\n          // state === 3\n          state = 1;\n          scheduler = _rxjs.asapScheduler.schedule(() => {\n            state = 0;\n            connection.unsubscribe();\n          }, DELAY);\n        }\n      }\n    };\n  });\n}\n/** @internal */\n\n\nfunction refCountDelay() {\n  return refCountDelayInner;\n}","map":null,"metadata":{},"sourceType":"script"}