{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.flags = flags;\n\nvar _rxjs = require(\"rxjs\");\n\nvar _operators = require(\"rxjs/operators\");\n\nvar _util = require(\"../util\"); // Copyright 2017-2020 @polkadot/api-derive authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\n\nfunction isIncludedFn(accountId) {\n  return function (id) {\n    return id.toString() === accountId.toString();\n  };\n}\n/**\n * @name info\n * @description Returns account membership flags\n */\n\n\nfunction flags(api) {\n  return (0, _util.memo)(address => {\n    var _api$query$councilSec, _api$query$council, _api$query$technicalC, _api$query$society, _api$query$sudo;\n\n    const councilSection = api.query.electionsPhragmen ? 'electionsPhragmen' : 'elections';\n    return (0, _rxjs.combineLatest)([address && ((_api$query$councilSec = api.query[councilSection]) === null || _api$query$councilSec === void 0 ? void 0 : _api$query$councilSec.members) ? api.query[councilSection].members() : (0, _rxjs.of)(undefined), address && ((_api$query$council = api.query.council) === null || _api$query$council === void 0 ? void 0 : _api$query$council.members) ? api.query.council.members() : (0, _rxjs.of)([]), address && ((_api$query$technicalC = api.query.technicalCommittee) === null || _api$query$technicalC === void 0 ? void 0 : _api$query$technicalC.members) ? api.query.technicalCommittee.members() : (0, _rxjs.of)([]), address && ((_api$query$society = api.query.society) === null || _api$query$society === void 0 ? void 0 : _api$query$society.members) ? api.query.society.members() : (0, _rxjs.of)([]), address && ((_api$query$sudo = api.query.sudo) === null || _api$query$sudo === void 0 ? void 0 : _api$query$sudo.key) ? api.query.sudo.key() : (0, _rxjs.of)(undefined)]).pipe((0, _operators.map)(([electionsMembers, councilMembers, technicalCommitteeMembers, societyMembers, sudoKey]) => {\n      const isIncluded = address ? isIncludedFn(address) : () => false;\n      return {\n        isCouncil: ((electionsMembers === null || electionsMembers === void 0 ? void 0 : electionsMembers.map(([id]) => id)) || councilMembers || []).some(isIncluded),\n        isSociety: (societyMembers || []).some(isIncluded),\n        isSudo: (sudoKey === null || sudoKey === void 0 ? void 0 : sudoKey.toString()) === (address === null || address === void 0 ? void 0 : address.toString()),\n        isTechCommittee: (technicalCommitteeMembers || []).some(isIncluded)\n      };\n    }));\n  });\n}","map":null,"metadata":{},"sourceType":"script"}