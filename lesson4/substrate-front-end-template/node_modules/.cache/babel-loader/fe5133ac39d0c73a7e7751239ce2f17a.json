{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.AllHashers = void 0; // Copyright 2017-2020 @polkadot/types authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\n\nconst AllHashers = {\n  Blake2_128: null,\n  // eslint-disable-line camelcase\n  Blake2_256: null,\n  // eslint-disable-line camelcase\n  Blake2_128Concat: null,\n  // eslint-disable-line camelcase\n  Twox128: null,\n  Twox256: null,\n  Twox64Concat: null,\n  // new in v11\n  Identity: null\n};\nexports.AllHashers = AllHashers;\nvar _default = {\n  rpc: {},\n  types: {\n    // v0\n    CallMetadataV0: {\n      name: 'Text',\n      functions: 'Vec<FunctionMetadataV0>'\n    },\n    EventMetadataV0: {\n      name: 'Text',\n      args: 'Vec<Type>',\n      documentation: 'Vec<Text>'\n    },\n    FunctionArgumentMetadataV0: {\n      name: 'Text',\n      type: 'Type'\n    },\n    FunctionMetadataV0: {\n      id: 'u16',\n      name: 'Text',\n      args: 'Vec<FunctionArgumentMetadataV0>',\n      documentation: 'Vec<Text>'\n    },\n    MapTypeV0: {\n      key: 'Type',\n      value: 'Type'\n    },\n    MetadataV0: {\n      outerEvent: 'OuterEventMetadataV0',\n      modules: 'Vec<RuntimeModuleMetadataV0>',\n      outerDispatch: 'OuterDispatchMetadataV0'\n    },\n    ModuleMetadataV0: {\n      name: 'Text',\n      call: 'CallMetadataV0'\n    },\n    OuterDispatchCallV0: {\n      name: 'Text',\n      prefix: 'Text',\n      index: 'u16'\n    },\n    OuterDispatchMetadataV0: {\n      name: 'Text',\n      calls: 'Vec<OuterDispatchCallV0>'\n    },\n    OuterEventEventMetadataEventsV0: 'Vec<EventMetadataV0>',\n    OuterEventEventMetadataV0: '(Text, OuterEventEventMetadataEventsV0)',\n    OuterEventMetadataV0: {\n      name: 'Text',\n      events: 'Vec<OuterEventEventMetadataV0>'\n    },\n    PlainTypeV0: 'Type',\n    RuntimeModuleMetadataV0: {\n      prefix: 'Text',\n      module: 'ModuleMetadataV0',\n      storage: 'Option<StorageMetadataV0>'\n    },\n    StorageFunctionMetadataV0: {\n      name: 'Text',\n      modifier: 'StorageFunctionModifierV0',\n      type: 'StorageFunctionTypeV0',\n      fallback: 'Bytes',\n      documentation: 'Vec<Text>'\n    },\n    StorageFunctionModifierV0: {\n      _enum: ['Optional', 'Default', 'Required']\n    },\n    StorageFunctionTypeV0: {\n      _enum: {\n        Plain: 'PlainTypeV0',\n        Map: 'MapTypeV0'\n      }\n    },\n    StorageMetadataV0: {\n      prefix: 'Text',\n      functions: 'Vec<StorageFunctionMetadataV0>'\n    },\n    // v1\n    EventMetadataV1: 'EventMetadataV0',\n    FunctionArgumentMetadataV1: 'FunctionArgumentMetadataV0',\n    FunctionMetadataV1: {\n      name: 'Text',\n      args: 'Vec<FunctionArgumentMetadataV1>',\n      documentation: 'Vec<Text>'\n    },\n    MetadataV1: {\n      modules: 'Vec<ModuleMetadataV1>'\n    },\n    ModuleMetadataV1: {\n      name: 'Text',\n      prefix: 'Text',\n      storage: 'Option<Vec<StorageFunctionMetadataV1>>',\n      calls: 'Option<Vec<FunctionMetadataV1>>',\n      events: 'Option<Vec<EventMetadataV1>>'\n    },\n    StorageFunctionMetadataV1: 'StorageFunctionMetadataV0',\n    StorageFunctionModifierV1: 'StorageFunctionModifierV0',\n    StorageFunctionTypeV1: 'StorageFunctionTypeV0',\n    // v2\n    EventMetadataV2: 'EventMetadataV1',\n    FunctionArgumentMetadataV2: 'FunctionArgumentMetadataV1',\n    FunctionMetadataV2: 'FunctionMetadataV1',\n    MapTypeV2: {\n      key: 'Type',\n      value: 'Type',\n      linked: 'bool'\n    },\n    MetadataV2: {\n      modules: 'Vec<ModuleMetadataV2>'\n    },\n    ModuleMetadataV2: {\n      name: 'Text',\n      prefix: 'Text',\n      storage: 'Option<Vec<StorageFunctionMetadataV2>>',\n      calls: 'Option<Vec<FunctionMetadataV2>>',\n      events: 'Option<Vec<EventMetadataV2>>'\n    },\n    PlainTypeV2: 'Type',\n    StorageFunctionMetadataV2: {\n      name: 'Text',\n      modifier: 'StorageFunctionModifierV2',\n      type: 'StorageFunctionTypeV2',\n      fallback: 'Bytes',\n      documentation: 'Vec<Text>'\n    },\n    StorageFunctionModifierV2: 'StorageFunctionModifierV1',\n    StorageFunctionTypeV2: {\n      _enum: {\n        Plain: 'PlainTypeV2',\n        Map: 'MapTypeV2'\n      }\n    },\n    // v3\n    DoubleMapTypeV3: {\n      key1: 'Type',\n      key2: 'Type',\n      value: 'Type',\n      key2Hasher: 'Text'\n    },\n    EventMetadataV3: 'EventMetadataV2',\n    FunctionArgumentMetadataV3: 'FunctionArgumentMetadataV2',\n    FunctionMetadataV3: 'FunctionMetadataV2',\n    MapTypeV3: 'MapTypeV2',\n    MetadataV3: {\n      modules: 'Vec<ModuleMetadataV3>'\n    },\n    ModuleMetadataV3: {\n      name: 'Text',\n      prefix: 'Text',\n      storage: 'Option<Vec<StorageFunctionMetadataV3>>',\n      calls: 'Option<Vec<FunctionMetadataV3>>',\n      events: 'Option<Vec<EventMetadataV3>>'\n    },\n    PlainTypeV3: 'Type',\n    StorageFunctionMetadataV3: {\n      name: 'Text',\n      modifier: 'StorageFunctionModifierV3',\n      type: 'StorageFunctionTypeV3',\n      fallback: 'Bytes',\n      documentation: 'Vec<Text>'\n    },\n    StorageFunctionModifierV3: 'StorageFunctionModifierV2',\n    StorageFunctionTypeV3: {\n      _enum: {\n        Plain: 'PlainTypeV3',\n        Map: 'MapTypeV3',\n        DoubleMap: 'DoubleMapTypeV3'\n      }\n    },\n    // v4\n    DoubleMapTypeV4: {\n      hasher: 'StorageHasherV4',\n      key1: 'Type',\n      key2: 'Type',\n      value: 'Type',\n      key2Hasher: 'Text'\n    },\n    EventMetadataV4: 'EventMetadataV3',\n    FunctionArgumentMetadataV4: 'FunctionArgumentMetadataV3',\n    FunctionMetadataV4: 'FunctionMetadataV3',\n    MapTypeV4: {\n      hasher: 'StorageHasherV4',\n      key: 'Type',\n      value: 'Type',\n      linked: 'bool'\n    },\n    MetadataV4: {\n      modules: 'Vec<ModuleMetadataV4>'\n    },\n    ModuleMetadataV4: {\n      name: 'Text',\n      prefix: 'Text',\n      storage: 'Option<Vec<StorageFunctionMetadataV4>>',\n      calls: 'Option<Vec<FunctionMetadataV4>>',\n      events: 'Option<Vec<EventMetadataV4>>'\n    },\n    PlainTypeV4: 'Type',\n    StorageFunctionMetadataV4: {\n      name: 'Text',\n      modifier: 'StorageFunctionModifierV4',\n      type: 'StorageFunctionTypeV4',\n      fallback: 'Bytes',\n      documentation: 'Vec<Text>'\n    },\n    StorageFunctionModifierV4: 'StorageFunctionModifierV3',\n    StorageFunctionTypeV4: {\n      _enum: {\n        Plain: 'PlainTypeV4',\n        Map: 'MapTypeV4',\n        DoubleMap: 'DoubleMapTypeV4'\n      }\n    },\n    StorageHasherV4: {\n      _enum: {\n        Blake2_128: null,\n        // eslint-disable-line camelcase\n        Blake2_256: null,\n        // eslint-disable-line camelcase\n        Twox128: null,\n        Twox256: null,\n        Twox64Concat: null\n      }\n    },\n    // v5\n    DoubleMapTypeV5: {\n      hasher: 'StorageHasherV5',\n      key1: 'Type',\n      key2: 'Type',\n      value: 'Type',\n      key2Hasher: 'StorageHasherV5'\n    },\n    EventMetadataV5: 'EventMetadataV4',\n    FunctionArgumentMetadataV5: 'FunctionArgumentMetadataV4',\n    FunctionMetadataV5: 'FunctionMetadataV4',\n    MapTypeV5: 'MapTypeV4',\n    MetadataV5: {\n      modules: 'Vec<ModuleMetadataV5>'\n    },\n    ModuleMetadataV5: {\n      name: 'Text',\n      prefix: 'Text',\n      storage: 'Option<Vec<StorageFunctionMetadataV5>>',\n      calls: 'Option<Vec<FunctionMetadataV5>>',\n      events: 'Option<Vec<EventMetadataV5>>'\n    },\n    PlainTypeV5: 'Type',\n    StorageFunctionMetadataV5: {\n      name: 'Text',\n      modifier: 'StorageFunctionModifierV5',\n      type: 'StorageFunctionTypeV5',\n      fallback: 'Bytes',\n      documentation: 'Vec<Text>'\n    },\n    StorageFunctionModifierV5: 'StorageFunctionModifierV4',\n    StorageFunctionTypeV5: {\n      _enum: {\n        Plain: 'PlainTypeV5',\n        Map: 'MapTypeV5',\n        DoubleMap: 'DoubleMapTypeV5'\n      }\n    },\n    StorageHasherV5: 'StorageHasherV4',\n    // v6\n    DoubleMapTypeV6: 'DoubleMapTypeV5',\n    EventMetadataV6: 'EventMetadataV5',\n    FunctionArgumentMetadataV6: 'FunctionArgumentMetadataV5',\n    FunctionMetadataV6: 'FunctionMetadataV5',\n    MapTypeV6: 'MapTypeV5',\n    MetadataV6: {\n      modules: 'Vec<ModuleMetadataV6>'\n    },\n    ModuleConstantMetadataV6: {\n      name: 'Text',\n      type: 'Type',\n      value: 'Bytes',\n      documentation: 'Vec<Text>'\n    },\n    ModuleMetadataV6: {\n      name: 'Text',\n      prefix: 'Text',\n      storage: 'Option<Vec<StorageEntryMetadataV6>>',\n      calls: 'Option<Vec<FunctionMetadataV6>>',\n      events: 'Option<Vec<EventMetadataV6>>',\n      constants: 'Vec<ModuleConstantMetadataV6>'\n    },\n    PlainTypeV6: 'Type',\n    StorageEntryModifierV6: 'StorageFunctionModifierV5',\n    StorageEntryMetadataV6: 'StorageFunctionMetadataV5',\n    StorageEntryTypeV6: 'StorageFunctionTypeV5',\n    StorageHasherV6: 'StorageHasherV5',\n    // v7\n    DoubleMapTypeV7: 'DoubleMapTypeV6',\n    EventMetadataV7: 'EventMetadataV6',\n    FunctionArgumentMetadataV7: 'FunctionArgumentMetadataV6',\n    FunctionMetadataV7: 'FunctionMetadataV6',\n    MapTypeV7: 'MapTypeV6',\n    MetadataV7: {\n      modules: 'Vec<ModuleMetadataV7>'\n    },\n    ModuleConstantMetadataV7: 'ModuleConstantMetadataV6',\n    ModuleMetadataV7: {\n      name: 'Text',\n      storage: 'Option<StorageMetadataV7>',\n      calls: 'Option<Vec<FunctionMetadataV7>>',\n      events: 'Option<Vec<EventMetadataV7>>',\n      constants: 'Vec<ModuleConstantMetadataV7>'\n    },\n    PlainTypeV7: 'Type',\n    StorageEntryModifierV7: 'StorageEntryModifierV6',\n    StorageEntryMetadataV7: 'StorageEntryMetadataV6',\n    StorageEntryTypeV7: 'StorageEntryTypeV6',\n    StorageHasherV7: 'StorageHasherV6',\n    StorageMetadataV7: {\n      prefix: 'Text',\n      items: 'Vec<StorageEntryMetadataV7>'\n    },\n    // v8\n    DoubleMapTypeV8: 'DoubleMapTypeV7',\n    ErrorMetadataV8: {\n      name: 'Text',\n      documentation: 'Vec<Text>'\n    },\n    EventMetadataV8: 'EventMetadataV7',\n    FunctionArgumentMetadataV8: 'FunctionArgumentMetadataV7',\n    FunctionMetadataV8: 'FunctionMetadataV7',\n    MapTypeV8: 'MapTypeV7',\n    MetadataV8: {\n      modules: 'Vec<ModuleMetadataV8>'\n    },\n    ModuleConstantMetadataV8: 'ModuleConstantMetadataV7',\n    ModuleMetadataV8: {\n      name: 'Text',\n      storage: 'Option<StorageMetadataV8>',\n      calls: 'Option<Vec<FunctionMetadataV8>>',\n      events: 'Option<Vec<EventMetadataV8>>',\n      constants: 'Vec<ModuleConstantMetadataV8>',\n      errors: 'Vec<ErrorMetadataV8>'\n    },\n    PlainTypeV8: 'Type',\n    StorageEntryModifierV8: 'StorageEntryModifierV7',\n    StorageEntryMetadataV8: 'StorageEntryMetadataV7',\n    StorageEntryTypeV8: 'StorageEntryTypeV7',\n    StorageHasherV8: 'StorageHasherV7',\n    StorageMetadataV8: 'StorageMetadataV7',\n    // v9\n    DoubleMapTypeV9: 'DoubleMapTypeV8',\n    ErrorMetadataV9: 'ErrorMetadataV8',\n    EventMetadataV9: 'EventMetadataV8',\n    FunctionArgumentMetadataV9: 'FunctionArgumentMetadataV8',\n    FunctionMetadataV9: 'FunctionMetadataV8',\n    MapTypeV9: 'MapTypeV8',\n    MetadataV9: 'MetadataV8',\n    ModuleConstantMetadataV9: 'ModuleConstantMetadataV8',\n    ModuleMetadataV9: 'ModuleMetadataV8',\n    PlainTypeV9: 'Type',\n    StorageEntryModifierV9: 'StorageEntryModifierV8',\n    StorageEntryMetadataV9: 'StorageEntryMetadataV8',\n    StorageEntryTypeV9: 'StorageEntryTypeV8',\n    StorageHasherV9: 'StorageHasherV8',\n    StorageMetadataV9: 'StorageMetadataV8',\n    // v10\n    DoubleMapTypeV10: {\n      hasher: 'StorageHasherV10',\n      key1: 'Type',\n      key2: 'Type',\n      value: 'Type',\n      key2Hasher: 'StorageHasherV10'\n    },\n    ErrorMetadataV10: 'ErrorMetadataV9',\n    EventMetadataV10: 'EventMetadataV9',\n    FunctionArgumentMetadataV10: 'FunctionArgumentMetadataV9',\n    FunctionMetadataV10: 'FunctionMetadataV9',\n    MapTypeV10: {\n      hasher: 'StorageHasherV10',\n      key: 'Type',\n      value: 'Type',\n      linked: 'bool'\n    },\n    MetadataV10: {\n      modules: 'Vec<ModuleMetadataV10>'\n    },\n    ModuleConstantMetadataV10: 'ModuleConstantMetadataV9',\n    ModuleMetadataV10: {\n      name: 'Text',\n      storage: 'Option<StorageMetadataV10>',\n      calls: 'Option<Vec<FunctionMetadataV10>>',\n      events: 'Option<Vec<EventMetadataV10>>',\n      constants: 'Vec<ModuleConstantMetadataV10>',\n      errors: 'Vec<ErrorMetadataV10>'\n    },\n    PlainTypeV10: 'Type',\n    StorageEntryModifierV10: 'StorageEntryModifierV9',\n    StorageEntryMetadataV10: {\n      name: 'Text',\n      modifier: 'StorageEntryModifierV10',\n      type: 'StorageEntryTypeV10',\n      fallback: 'Bytes',\n      documentation: 'Vec<Text>'\n    },\n    StorageEntryTypeV10: {\n      _enum: {\n        Plain: 'PlainTypeV10',\n        Map: 'MapTypeV10',\n        DoubleMap: 'DoubleMapTypeV10'\n      }\n    },\n    StorageMetadataV10: {\n      prefix: 'Text',\n      items: 'Vec<StorageEntryMetadataV10>'\n    },\n    StorageHasherV10: {\n      _enum: {\n        Blake2_128: null,\n        // eslint-disable-line camelcase\n        Blake2_256: null,\n        // eslint-disable-line camelcase\n        Blake2_128Concat: null,\n        // eslint-disable-line camelcase\n        Twox128: null,\n        Twox256: null,\n        Twox64Concat: null\n      }\n    },\n    // v11\n    DoubleMapTypeV11: {\n      hasher: 'StorageHasherV11',\n      key1: 'Type',\n      key2: 'Type',\n      value: 'Type',\n      key2Hasher: 'StorageHasherV11'\n    },\n    ErrorMetadataV11: 'ErrorMetadataV10',\n    EventMetadataV11: 'EventMetadataV10',\n    ExtrinsicMetadataV11: {\n      version: 'u8',\n      signedExtensions: 'Vec<Text>'\n    },\n    FunctionArgumentMetadataV11: 'FunctionArgumentMetadataV10',\n    FunctionMetadataV11: 'FunctionMetadataV10',\n    MapTypeV11: {\n      hasher: 'StorageHasherV11',\n      key: 'Type',\n      value: 'Type',\n      linked: 'bool'\n    },\n    MetadataV11: {\n      modules: 'Vec<ModuleMetadataV11>',\n      extrinsic: 'ExtrinsicMetadataV11'\n    },\n    ModuleConstantMetadataV11: 'ModuleConstantMetadataV10',\n    ModuleMetadataV11: {\n      name: 'Text',\n      storage: 'Option<StorageMetadataV11>',\n      calls: 'Option<Vec<FunctionMetadataV11>>',\n      events: 'Option<Vec<EventMetadataV11>>',\n      constants: 'Vec<ModuleConstantMetadataV11>',\n      errors: 'Vec<ErrorMetadataV11>'\n    },\n    PlainTypeV11: 'Type',\n    StorageEntryModifierV11: 'StorageEntryModifierV10',\n    StorageEntryMetadataV11: {\n      name: 'Text',\n      modifier: 'StorageEntryModifierV11',\n      type: 'StorageEntryTypeV11',\n      fallback: 'Bytes',\n      documentation: 'Vec<Text>'\n    },\n    StorageEntryTypeV11: {\n      _enum: {\n        Plain: 'PlainTypeV11',\n        Map: 'MapTypeV11',\n        DoubleMap: 'DoubleMapTypeV11'\n      }\n    },\n    StorageMetadataV11: {\n      prefix: 'Text',\n      items: 'Vec<StorageEntryMetadataV11>'\n    },\n    StorageHasherV11: {\n      _enum: AllHashers\n    },\n    // This always maps to the latest\n    DoubleMapTypeLatest: 'DoubleMapTypeV11',\n    EventMetadataLatest: 'EventMetadataV11',\n    ExtrinsicMetadataLatest: 'ExtrinsicMetadataV11',\n    FunctionArgumentMetadataLatest: 'FunctionArgumentMetadataV11',\n    FunctionMetadataLatest: 'FunctionMetadataV11',\n    MapTypeLatest: 'MapTypeV11',\n    MetadataLatest: 'MetadataV11',\n    ModuleConstantMetadataLatest: 'ModuleConstantMetadataV11',\n    ModuleMetadataLatest: 'ModuleMetadataV11',\n    PlainTypeLatest: 'PlainTypeV11',\n    StorageEntryMetadataLatest: 'StorageEntryMetadataV11',\n    StorageEntryModifierLatest: 'StorageEntryModifierV11',\n    StorageEntryTypeLatest: 'StorageEntryTypeV11',\n    StorageMetadataLatest: 'StorageMetadataV11',\n    StorageHasher: 'StorageHasherV11',\n    // the enum containing all the mappings\n    MetadataAll: {\n      _enum: {\n        V0: 'MetadataV0',\n        V1: 'MetadataV1',\n        V2: 'MetadataV2',\n        V3: 'MetadataV3',\n        V4: 'MetadataV4',\n        V5: 'MetadataV5',\n        V6: 'MetadataV6',\n        V7: 'MetadataV7',\n        V8: 'MetadataV8',\n        V9: 'MetadataV9',\n        V10: 'MetadataV10',\n        V11: 'MetadataV11'\n      }\n    }\n  }\n};\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}