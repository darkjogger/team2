{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = secp256k1KeypairFromSeed;\n\nvar _util = require(\"@polkadot/util\");\n\nvar _elliptic = _interopRequireDefault(require(\"elliptic\")); // Copyright 2017-2020 @polkadot/util-crypto authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\n\nconst EC = _elliptic.default.ec;\nconst ec = new EC('secp256k1');\n/**\n * @name secp256k1KeypairFromSeed\n * @description Returns a object containing a `publicKey` & `secretKey` generated from the supplied seed.\n */\n\nfunction secp256k1KeypairFromSeed(seed) {\n  (0, _util.assert)(seed.length === 32, 'Expected valid 32-byte private key as a seed');\n  const key = ec.keyFromPrivate(seed);\n  return {\n    publicKey: new Uint8Array(key.getPublic().encodeCompressed('array')),\n    secretKey: (0, _util.hexToU8a)(`0x${key.getPrivate('hex')}`)\n  };\n}","map":null,"metadata":{},"sourceType":"script"}