{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = hexStripPrefix;\n\nvar _hasPrefix = _interopRequireDefault(require(\"./hasPrefix\")); // Copyright 2017-2020 @polkadot/util authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\n\nconst UNPREFIX_HEX_REGEX = /^[a-fA-F0-9]+$/;\n/**\n * @name hexStripPrefix\n * @summary Strips any leading `0x` prefix.\n * @description\n * Tests for the existence of a `0x` prefix, and returns the value without the prefix. Un-prefixed values are returned as-is.\n * @example\n * <BR>\n *\n * ```javascript\n * import { hexStripPrefix } from '@polkadot/util';\n *\n * console.log('stripped', hexStripPrefix('0x1234')); // => 1234\n * ```\n */\n\nfunction hexStripPrefix(value) {\n  if (!value) {\n    return '';\n  }\n\n  if ((0, _hasPrefix.default)(value)) {\n    return value.substr(2);\n  }\n\n  if (UNPREFIX_HEX_REGEX.test(value)) {\n    return value;\n  }\n\n  throw new Error(`Invalid hex ${value} passed to hexStripPrefix`);\n}","map":null,"metadata":{},"sourceType":"script"}