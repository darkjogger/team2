{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isHex;\n\nvar _string = _interopRequireDefault(require(\"./string\")); // Copyright 2017-2020 @polkadot/util authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\n\nconst HEX_REGEX = /^0x[a-fA-F0-9]+$/;\n/**\n * @name isHex\n * @summary Tests for a hex string.\n * @description\n * Checks to see if the input value is a `0x` prefixed hex string. Optionally (`bitLength` !== -1) checks to see if the bitLength is correct.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isHex } from '@polkadot/util';\n *\n * isHex('0x1234'); // => true\n * isHex('0x1234', 8); // => false\n * ```\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\n\nfunction isHex(value, bitLength = -1, ignoreLength = false) {\n  const isValidHex = value === '0x' || (0, _string.default)(value) && HEX_REGEX.test(value.toString());\n\n  if (isValidHex && bitLength !== -1) {\n    return value.length === 2 + Math.ceil(bitLength / 4);\n  }\n\n  return isValidHex && (ignoreLength || value.length % 2 === 0);\n}","map":null,"metadata":{},"sourceType":"script"}