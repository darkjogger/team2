{"ast":null,"code":"var _jsxFileName = \"/Users/binggao/Documents/GitHub/team2/lesson4/substrate-front-end-template/src/PoeUserInfo.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Input, TxButton, Container, Dropdown, Form, Grid, Menu, Table } from 'semantic-ui-react';\nimport { useSubstrate } from './substrate-lib';\n\nfunction Main(props) {\n  const {\n    api,\n    keyring\n  } = useSubstrate();\n  const [accountSelected, setAccountSelected] = useState('');\n  const keyringOptions = keyring.getPairs().map(account => ({\n    key: account.address,\n    value: account.address,\n    text: account.meta.name.toUpperCase(),\n    icon: 'user'\n  }));\n  const accounts = keyring.getPairs();\n  const [balances, setBalances] = useState({});\n  useEffect(() => {\n    const addresses = keyring.getPairs().map(account => account.address);\n    let unsubscribeAll = null;\n    api.query.poeModule.AccountHashList.multi(addresses, proofs => {\n      const balancesMap = addresses.reduce((acc, address, index) => ({ ...acc,\n        [address]: JSON.stringify(proofs[index])\n      }), {});\n      setBalances(balancesMap);\n    }).then(unsub => {\n      unsubscribeAll = unsub;\n    }).catch(console.error);\n    return () => unsubscribeAll && unsubscribeAll();\n  }, [api, keyring, setBalances]);\n\n  const onChange = address => {\n    setAccountSelected(address);\n  };\n\n  return React.createElement(Grid.Column, {\n    width: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Proof of Existence - User Info\"), React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Input, {\n    label: \"User Address\",\n    state: \"newValue\",\n    type: \"text\",\n    onChange: (_, {\n      addr\n    }) => {\n      onChange(addr);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  })), React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(TxButton, {\n    accountPair: accountPair,\n    label: \"Query User Doc\",\n    setStatus: setStatus,\n    type: \"SIGNED-TX\",\n    attrs: {\n      palletRpc: 'poeModule',\n      callable: 'QueryUserDoc',\n      inputParams: [address],\n      paramFields: [true]\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  })), React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(Menu, {\n    attached: \"top\",\n    tabular: true,\n    style: {\n      backgroundColor: '#fff',\n      borderColor: '#fff',\n      paddingTop: '1em',\n      paddingBottom: '1em'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(Menu.Menu, {\n    position: \"left\",\n    style: {\n      alignItems: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"To Account:\", React.createElement(Dropdown, {\n    search: true,\n    selection: true,\n    clearable: true,\n    placeholder: \"Select an account\",\n    options: keyringOptions,\n    onChange: (_, dropdown) => {\n      onChange(dropdown.value);\n    },\n    value: accountSelected,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  })))))), React.createElement(Table, {\n    celled: true,\n    striped: true,\n    size: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(Table.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, accounts.map(account => React.createElement(Table.Row, {\n    key: account.address,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(Table.Cell, {\n    width: 3,\n    textAlign: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, account.meta.name), React.createElement(Table.Cell, {\n    width: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    style: {\n      display: 'inline-block',\n      minWidth: '31em'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, account.address)), React.createElement(Table.Cell, {\n    width: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, balances && balances[account.address] && balances[account.address]))))));\n}\n\nexport default function PoeModule(props) {\n  const {\n    api\n  } = useSubstrate();\n  return api.query.poeModule && api.query.poeModule.AccountHashList ? React.createElement(Main, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  })) : null;\n}","map":{"version":3,"sources":["/Users/binggao/Documents/GitHub/team2/lesson4/substrate-front-end-template/src/PoeUserInfo.js"],"names":["React","useEffect","useState","Input","TxButton","Container","Dropdown","Form","Grid","Menu","Table","useSubstrate","Main","props","api","keyring","accountSelected","setAccountSelected","keyringOptions","getPairs","map","account","key","address","value","text","meta","name","toUpperCase","icon","accounts","balances","setBalances","addresses","unsubscribeAll","query","poeModule","AccountHashList","multi","proofs","balancesMap","reduce","acc","index","JSON","stringify","then","unsub","catch","console","error","onChange","_","addr","accountPair","setStatus","palletRpc","callable","inputParams","paramFields","backgroundColor","borderColor","paddingTop","paddingBottom","alignItems","dropdown","display","minWidth","PoeModule"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,EAA+CC,IAA/C,EAAqDC,IAArD,EAA2DC,IAA3D,EAAiEC,KAAjE,QAA8E,mBAA9E;AACA,SAASC,YAAT,QAA6B,iBAA7B;;AAEA,SAASC,IAAT,CAAeC,KAAf,EAAsB;AACpB,QAAM;AAAEC,IAAAA,GAAF;AAAOC,IAAAA;AAAP,MAAmBJ,YAAY,EAArC;AACA,QAAM,CAACK,eAAD,EAAkBC,kBAAlB,IAAwCf,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAMgB,cAAc,GAAGH,OAAO,CAACI,QAAR,GAAmBC,GAAnB,CAAuBC,OAAO,KAAK;AACxDC,IAAAA,GAAG,EAAED,OAAO,CAACE,OAD2C;AAExDC,IAAAA,KAAK,EAAEH,OAAO,CAACE,OAFyC;AAGxDE,IAAAA,IAAI,EAAEJ,OAAO,CAACK,IAAR,CAAaC,IAAb,CAAkBC,WAAlB,EAHkD;AAIxDC,IAAAA,IAAI,EAAE;AAJkD,GAAL,CAA9B,CAAvB;AAOA,QAAMC,QAAQ,GAAGf,OAAO,CAACI,QAAR,EAAjB;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0B9B,QAAQ,CAAC,EAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMgC,SAAS,GAAGlB,OAAO,CAACI,QAAR,GAAmBC,GAAnB,CAAuBC,OAAO,IAAIA,OAAO,CAACE,OAA1C,CAAlB;AACA,QAAIW,cAAc,GAAG,IAArB;AAEApB,IAAAA,GAAG,CAACqB,KAAJ,CAAUC,SAAV,CAAoBC,eAApB,CACGC,KADH,CACSL,SADT,EACoBM,MAAM,IAAI;AAC1B,YAAMC,WAAW,GAAGP,SAAS,CAACQ,MAAV,CAAiB,CAACC,GAAD,EAAMnB,OAAN,EAAeoB,KAAf,MAA0B,EAC7D,GAAGD,GAD0D;AACrD,SAACnB,OAAD,GAAWqB,IAAI,CAACC,SAAL,CAAeN,MAAM,CAACI,KAAD,CAArB;AAD0C,OAA1B,CAAjB,EAEhB,EAFgB,CAApB;AAGAX,MAAAA,WAAW,CAACQ,WAAD,CAAX;AACD,KANH,EAMKM,IANL,CAMUC,KAAK,IAAI;AACfb,MAAAA,cAAc,GAAGa,KAAjB;AACD,KARH,EAQKC,KARL,CAQWC,OAAO,CAACC,KARnB;AAUA,WAAO,MAAMhB,cAAc,IAAIA,cAAc,EAA7C;AACD,GAfQ,EAeN,CAACpB,GAAD,EAAMC,OAAN,EAAeiB,WAAf,CAfM,CAAT;;AAiBA,QAAMmB,QAAQ,GAAG5B,OAAO,IAAI;AAC1BN,IAAAA,kBAAkB,CAACM,OAAD,CAAlB;AACD,GAFD;;AAIA,SACE,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,KAAK,EAAE,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCADF,EAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,KAAK,EAAE,cADT;AAEE,IAAA,KAAK,EAAC,UAFR;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,QAAQ,EAAE,CAAC6B,CAAD,EAAI;AAAEC,MAAAA;AAAF,KAAJ,KAAiB;AACzBF,MAAAA,QAAQ,CAACE,IAAD,CAAR;AACD,KANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAYE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AACE,IAAA,WAAW,EAAEC,WADf;AAEE,IAAA,KAAK,EAAC,gBAFR;AAGE,IAAA,SAAS,EAAEC,SAHb;AAIE,IAAA,IAAI,EAAC,WAJP;AAKE,IAAA,KAAK,EAAE;AACLC,MAAAA,SAAS,EAAE,WADN;AAELC,MAAAA,QAAQ,EAAE,cAFL;AAGLC,MAAAA,WAAW,EAAE,CAACnC,OAAD,CAHR;AAILoC,MAAAA,WAAW,EAAE,CAAC,IAAD;AAJR,KALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAZF,EA2BE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AACE,IAAA,QAAQ,EAAC,KADX;AAEE,IAAA,OAAO,MAFT;AAGE,IAAA,KAAK,EAAE;AACLC,MAAAA,eAAe,EAAE,MADZ;AAELC,MAAAA,WAAW,EAAE,MAFR;AAGLC,MAAAA,UAAU,EAAE,KAHP;AAILC,MAAAA,aAAa,EAAE;AAJV,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,QAAQ,EAAC,MAApB;AAA2B,IAAA,KAAK,EAAE;AAAEC,MAAAA,UAAU,EAAE;AAAd,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE,oBAAC,QAAD;AACE,IAAA,MAAM,MADR;AAEE,IAAA,SAAS,MAFX;AAGE,IAAA,SAAS,MAHX;AAIE,IAAA,WAAW,EAAC,mBAJd;AAKE,IAAA,OAAO,EAAE9C,cALX;AAME,IAAA,QAAQ,EAAE,CAACkC,CAAD,EAAIa,QAAJ,KAAiB;AACzBd,MAAAA,QAAQ,CAACc,QAAQ,CAACzC,KAAV,CAAR;AACD,KARH;AASE,IAAA,KAAK,EAAER,eATT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CAVF,CADF,CA3BF,CAFF,EA4DE,oBAAC,KAAD;AAAO,IAAA,MAAM,MAAb;AAAc,IAAA,OAAO,MAArB;AAAsB,IAAA,IAAI,EAAC,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAac,QAAQ,CAACV,GAAT,CAAaC,OAAO,IAC/B,oBAAC,KAAD,CAAO,GAAP;AAAW,IAAA,GAAG,EAAEA,OAAO,CAACE,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,IAAP;AAAY,IAAA,KAAK,EAAE,CAAnB;AAAsB,IAAA,SAAS,EAAC,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyCF,OAAO,CAACK,IAAR,CAAaC,IAAtD,CADF,EAEE,oBAAC,KAAD,CAAO,IAAP;AAAY,IAAA,KAAK,EAAE,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,KAAK,EAAE;AAAEuC,MAAAA,OAAO,EAAE,cAAX;AAA2BC,MAAAA,QAAQ,EAAE;AAArC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG9C,OAAO,CAACE,OADX,CADF,CAFF,EAQE,oBAAC,KAAD,CAAO,IAAP;AAAY,IAAA,KAAK,EAAE,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEQ,QAAQ,IAAIA,QAAQ,CAACV,OAAO,CAACE,OAAT,CAApB,IACAQ,QAAQ,CAACV,OAAO,CAACE,OAAT,CAFV,CARF,CADW,CAAb,CADF,CA5DF,CADF;AAgFD;;AAED,eAAe,SAAS6C,SAAT,CAAoBvD,KAApB,EAA2B;AACxC,QAAM;AAAEC,IAAAA;AAAF,MAAUH,YAAY,EAA5B;AACA,SAAQG,GAAG,CAACqB,KAAJ,CAAUC,SAAV,IAAuBtB,GAAG,CAACqB,KAAJ,CAAUC,SAAV,CAAoBC,eAA3C,GACJ,oBAAC,IAAD,oBAAUxB,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADI,GACkB,IAD1B;AAED","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Input, TxButton, Container, Dropdown, Form, Grid, Menu, Table } from 'semantic-ui-react';\nimport { useSubstrate } from './substrate-lib';\n\nfunction Main (props) {\n  const { api, keyring } = useSubstrate();\n  const [accountSelected, setAccountSelected] = useState('');\n  const keyringOptions = keyring.getPairs().map(account => ({\n    key: account.address,\n    value: account.address,\n    text: account.meta.name.toUpperCase(),\n    icon: 'user'\n  }));\n\n  const accounts = keyring.getPairs();\n  const [balances, setBalances] = useState({});\n\n  useEffect(() => {\n    const addresses = keyring.getPairs().map(account => account.address);\n    let unsubscribeAll = null;\n\n    api.query.poeModule.AccountHashList\n      .multi(addresses, proofs => {\n        const balancesMap = addresses.reduce((acc, address, index) => ({\n          ...acc, [address]: JSON.stringify(proofs[index])\n        }), {});\n        setBalances(balancesMap);\n      }).then(unsub => {\n        unsubscribeAll = unsub;\n      }).catch(console.error);\n\n    return () => unsubscribeAll && unsubscribeAll();\n  }, [api, keyring, setBalances]);\n\n  const onChange = address => {\n    setAccountSelected(address);\n  };\n\n  return (\n    <Grid.Column width={8}>\n      <h1>Proof of Existence - User Info</h1>\n      <Form>\n        <Form.Field>\n          <Input\n            label ='User Address'\n            state='newValue'\n            type='text'\n            onChange={(_, { addr }) => {\n              onChange(addr);\n            }}\n          />\n        </Form.Field>\n\n        <Form.Field>\n          <TxButton\n            accountPair={accountPair}\n            label='Query User Doc'\n            setStatus={setStatus}\n            type='SIGNED-TX'\n            attrs={{\n              palletRpc: 'poeModule',\n              callable: 'QueryUserDoc',\n              inputParams: [address],\n              paramFields: [true]\n            }}\n          />\n        </Form.Field>\n\n        <Form.Field>\n          <Menu\n            attached='top'\n            tabular\n            style={{\n              backgroundColor: '#fff',\n              borderColor: '#fff',\n              paddingTop: '1em',\n              paddingBottom: '1em'\n            }}\n          >\n            <Container>\n              <Menu.Menu position='left' style={{ alignItems: 'center' }}>\n                To Account:\n                <Dropdown\n                  search\n                  selection\n                  clearable\n                  placeholder='Select an account'\n                  options={keyringOptions}\n                  onChange={(_, dropdown) => {\n                    onChange(dropdown.value);\n                  }}\n                  value={accountSelected}\n                />\n              </Menu.Menu>\n            </Container>\n          </Menu>\n        </Form.Field>\n      </Form>\n\n      <Table celled striped size='small'>\n        <Table.Body>{accounts.map(account =>\n          <Table.Row key={account.address}>\n            <Table.Cell width={3} textAlign='right'>{account.meta.name}</Table.Cell>\n            <Table.Cell width={10}>\n              <span style={{ display: 'inline-block', minWidth: '31em' }}>\n                {account.address}\n              </span>\n\n            </Table.Cell>\n            <Table.Cell width={3}>{\n              balances && balances[account.address] &&\n              balances[account.address]\n            }</Table.Cell>\n          </Table.Row>\n        )}</Table.Body>\n      </Table>\n    </Grid.Column>\n  );\n}\n\nexport default function PoeModule (props) {\n  const { api } = useSubstrate();\n  return (api.query.poeModule && api.query.poeModule.AccountHashList\n    ? <Main {...props} /> : null);\n}\n"]},"metadata":{},"sourceType":"module"}