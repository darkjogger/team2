{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.erasHistoric = erasHistoric;\n\nvar _rxjs = require(\"rxjs\");\n\nvar _operators = require(\"rxjs/operators\");\n\nvar _util = require(\"../util\"); // Copyright 2017-2020 @polkadot/api-derive authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\n\nfunction erasHistoric(api) {\n  return (0, _util.memo)(withActive => {\n    var _api$query$staking;\n\n    return ((_api$query$staking = api.query.staking) === null || _api$query$staking === void 0 ? void 0 : _api$query$staking.activeEra) ? api.queryMulti([api.query.staking.activeEra, api.query.staking.historyDepth]).pipe((0, _operators.map)(([activeEraOpt, historyDepth]) => {\n      const result = [];\n      const max = historyDepth.toNumber();\n      const activeEra = activeEraOpt.unwrapOrDefault().index;\n      let lastEra = activeEra;\n\n      while (lastEra.gten(0) && result.length < max) {\n        if (lastEra !== activeEra || withActive === true) {\n          result.push(api.registry.createType('EraIndex', lastEra));\n        }\n\n        lastEra = lastEra.subn(1);\n      } // go from oldest to newest\n\n\n      return result.reverse();\n    })) : (0, _rxjs.of)([]);\n  });\n}","map":null,"metadata":{},"sourceType":"script"}