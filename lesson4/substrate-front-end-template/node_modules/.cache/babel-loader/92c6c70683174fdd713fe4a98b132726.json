{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classPrivateFieldLooseBase2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classPrivateFieldLooseBase\"));\n\nvar _classPrivateFieldLooseKey2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classPrivateFieldLooseKey\"));\n\nvar _util = require(\"@polkadot/util\");\n\nvar _utilCrypto = require(\"@polkadot/util-crypto\"); // Copyright 2017-2020 @polkadot/keyring authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\n\nclass Pairs {\n  constructor() {\n    Object.defineProperty(this, _map, {\n      writable: true,\n      value: {}\n    });\n  }\n\n  add(pair) {\n    (0, _classPrivateFieldLooseBase2.default)(this, _map)[_map][(0, _utilCrypto.decodeAddress)(pair.address).toString()] = pair;\n    return pair;\n  }\n\n  all() {\n    return Object.values((0, _classPrivateFieldLooseBase2.default)(this, _map)[_map]);\n  }\n\n  get(address) {\n    const pair = (0, _classPrivateFieldLooseBase2.default)(this, _map)[_map][(0, _utilCrypto.decodeAddress)(address).toString()];\n\n    (0, _util.assert)(pair, () => {\n      const formatted = (0, _util.isU8a)(address) || (0, _util.isHex)(address) ? (0, _util.u8aToHex)((0, _util.u8aToU8a)(address)) : address;\n      return `Unable to retrieve keypair '${formatted}'`;\n    });\n    return pair;\n  }\n\n  remove(address) {\n    delete (0, _classPrivateFieldLooseBase2.default)(this, _map)[_map][(0, _utilCrypto.decodeAddress)(address).toString()];\n  }\n\n}\n\nexports.default = Pairs;\n\nvar _map = (0, _classPrivateFieldLooseKey2.default)(\"map\");","map":null,"metadata":{},"sourceType":"script"}