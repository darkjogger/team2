{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getHasher;\n\nvar _util = require(\"@polkadot/util\");\n\nvar _utilCrypto = require(\"@polkadot/util-crypto\"); // Copyright 2017-2020 @polkadot/metadata authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\n\nconst DEFAULT_FN = data => (0, _utilCrypto.xxhashAsU8a)(data, 128);\n\nconst HASHERS = {\n  Blake2_128: data => // eslint-disable-line camelcase\n  (0, _utilCrypto.blake2AsU8a)(data, 128),\n  Blake2_128Concat: data => // eslint-disable-line camelcase\n  (0, _util.u8aConcat)((0, _utilCrypto.blake2AsU8a)(data, 128), (0, _util.u8aToU8a)(data)),\n  Blake2_256: data => // eslint-disable-line camelcase\n  (0, _utilCrypto.blake2AsU8a)(data, 256),\n  Identity: data => (0, _util.u8aToU8a)(data),\n  Twox128: data => (0, _utilCrypto.xxhashAsU8a)(data, 128),\n  Twox256: data => (0, _utilCrypto.xxhashAsU8a)(data, 256),\n  Twox64Concat: data => (0, _util.u8aConcat)((0, _utilCrypto.xxhashAsU8a)(data, 64), (0, _util.u8aToU8a)(data))\n};\n/** @internal */\n\nfunction getHasher(hasher) {\n  return HASHERS[hasher === null || hasher === void 0 ? void 0 : hasher.type] || DEFAULT_FN;\n}","map":null,"metadata":{},"sourceType":"script"}