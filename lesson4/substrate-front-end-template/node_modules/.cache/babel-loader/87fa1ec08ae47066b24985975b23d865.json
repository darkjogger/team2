{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = toV5;\n\nvar _codec = require(\"@polkadot/types/codec\");\n\nvar _util = require(\"@polkadot/util\"); // Copyright 2017-2020 @polkadot/metadata authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\n\nconst hasherMap = new Map([['blake2_128', 'Blake2_128'], ['blake2_256', 'Blake2_256'], ['twox_128', 'Twox128'], ['twox_256', 'Twox256'], ['twox_64_concat', 'Twox64Concat']]);\n/** @internal */\n\nfunction toStorageHasher(registry, text) {\n  const mapped = hasherMap.get(text.toString());\n  (0, _util.assert)(mapped, `Invalid Storage hasher: ${text.toString()}`);\n  return registry.createType('StorageHasherV5', mapped);\n}\n/** @internal */\n\n\nfunction toV5StorageFunction(registry, storageFn) {\n  const {\n    documentation,\n    fallback,\n    modifier,\n    name,\n    type\n  } = storageFn;\n  const [newType, index] = type.isPlain ? [type.asPlain, 0] : type.isMap ? [type.asMap, 1] : [registry.createType('DoubleMapTypeV5', {\n    hasher: type.asDoubleMap.hasher,\n    key1: type.asDoubleMap.key1,\n    key2: type.asDoubleMap.key2,\n    key2Hasher: toStorageHasher(registry, type.asDoubleMap.key2Hasher),\n    value: type.asDoubleMap.value\n  }), 2];\n  return registry.createType('StorageFunctionMetadataV5', {\n    documentation,\n    fallback,\n    modifier,\n    name,\n    type: registry.createType('StorageFunctionTypeV5', newType, index)\n  });\n}\n/** @internal */\n\n\nfunction toV5(registry, {\n  modules\n}) {\n  return registry.createType('MetadataV5', {\n    modules: modules.map(({\n      calls,\n      events,\n      name,\n      prefix,\n      storage\n    }) => registry.createType('ModuleMetadataV5', {\n      calls,\n      events,\n      name,\n      prefix,\n      storage: storage.isSome ? new _codec.Option(registry, 'Vec<StorageFunctionMetadataV5>', storage.unwrap().map(v => toV5StorageFunction(registry, v))) : undefined\n    }))\n  });\n}","map":null,"metadata":{},"sourceType":"script"}