{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.indexes = indexes;\n\nvar _rxjs = require(\"rxjs\");\n\nvar _operators = require(\"rxjs/operators\");\n\nvar _util = require(\"@polkadot/util\");\n\nvar _util2 = require(\"../util\"); // Copyright 2017-2020 @polkadot/api-derive authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n// parse into Indexes\n\n\nfunction parse([activeEra, activeEraStart, currentEra, currentIndex, validatorCount]) {\n  return {\n    activeEra,\n    activeEraStart,\n    currentEra,\n    currentIndex,\n    validatorCount\n  };\n} // query for previous V2\n\n\nfunction queryNoActive(api) {\n  return api.queryMulti([api.query.staking.currentEra, api.query.session.currentIndex, api.query.staking.validatorCount]).pipe((0, _operators.map)(([currentEra, currentIndex, validatorCount]) => [currentEra, api.registry.createType('Option<Moment>'), currentEra, currentIndex, validatorCount]));\n} // query based on latest\n\n\nfunction query(api) {\n  return api.queryMulti([api.query.staking.activeEra, api.query.staking.currentEra, api.query.session.currentIndex, api.query.staking.validatorCount]).pipe((0, _operators.map)(([activeOpt, currentEra, currentIndex, validatorCount]) => {\n    const {\n      index: activeEra,\n      start: activeEraStart\n    } = activeOpt.unwrapOrDefault();\n    return [activeEra, activeEraStart, currentEra.unwrapOr(api.registry.createType('EraIndex')), currentIndex, validatorCount];\n  }));\n} // empty set when none is available\n\n\nfunction empty(api) {\n  return (0, _rxjs.of)([api.registry.createType('EraIndex'), api.registry.createType('Option<Moment>'), api.registry.createType('EraIndex'), api.registry.createType('SessionIndex', 1), api.registry.createType('u32')]);\n}\n\nfunction indexes(api) {\n  return (0, _util2.memo)(() => (api.query.session && api.query.staking ? (0, _util.isFunction)(api.query.staking.activeEra) ? query(api) : queryNoActive(api) : empty(api)).pipe((0, _operators.map)(parse)));\n}","map":null,"metadata":{},"sourceType":"script"}