{"ast":null,"code":"import BigJS from 'big.js';\nimport toFormat from 'toformat';\nconst Big = toFormat(BigJS);\nconst utils = {\n  prettyBalance: function (amt, opts = {}) {\n    if (typeof amt !== 'number' && typeof amt !== 'string') {\n      throw new Error(`${amt} is not a number`);\n    } // default option values\n\n\n    opts = {\n      power: 8,\n      decimal: 2,\n      unit: 'Units',\n      ...opts\n    };\n    const bn = Big(amt);\n    const divisor = Big(10).pow(opts.power);\n    const displayed = bn.div(divisor).toFormat(opts.decimal);\n    return `${displayed.toString()} ${opts.unit}`;\n  },\n  paramConversion: {\n    num: ['Compact<Balance>', 'BalanceOf', 'u8', 'u16', 'u32', 'u64', 'u128', 'i8', 'i16', 'i32', 'i64', 'i128']\n  }\n};\nexport default utils;","map":{"version":3,"sources":["/Users/binggao/Documents/GitHub/team2/lesson4/substrate-front-end-template/src/substrate-lib/utils.js"],"names":["BigJS","toFormat","Big","utils","prettyBalance","amt","opts","Error","power","decimal","unit","bn","divisor","pow","displayed","div","toString","paramConversion","num"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,QAAlB;AACA,OAAOC,QAAP,MAAqB,UAArB;AAEA,MAAMC,GAAG,GAAGD,QAAQ,CAACD,KAAD,CAApB;AAEA,MAAMG,KAAK,GAAG;AACZC,EAAAA,aAAa,EAAE,UAAUC,GAAV,EAAeC,IAAI,GAAG,EAAtB,EAA0B;AACvC,QAAI,OAAOD,GAAP,KAAe,QAAf,IAA2B,OAAOA,GAAP,KAAe,QAA9C,EAAwD;AACtD,YAAM,IAAIE,KAAJ,CAAW,GAAEF,GAAI,kBAAjB,CAAN;AACD,KAHsC,CAKvC;;;AACAC,IAAAA,IAAI,GAAG;AAAEE,MAAAA,KAAK,EAAE,CAAT;AAAYC,MAAAA,OAAO,EAAE,CAArB;AAAwBC,MAAAA,IAAI,EAAE,OAA9B;AAAuC,SAAGJ;AAA1C,KAAP;AAEA,UAAMK,EAAE,GAAGT,GAAG,CAACG,GAAD,CAAd;AACA,UAAMO,OAAO,GAAGV,GAAG,CAAC,EAAD,CAAH,CAAQW,GAAR,CAAYP,IAAI,CAACE,KAAjB,CAAhB;AACA,UAAMM,SAAS,GAAGH,EAAE,CAACI,GAAH,CAAOH,OAAP,EAAgBX,QAAhB,CAAyBK,IAAI,CAACG,OAA9B,CAAlB;AACA,WAAQ,GAAEK,SAAS,CAACE,QAAV,EAAqB,IAAGV,IAAI,CAACI,IAAK,EAA5C;AACD,GAbW;AAeZO,EAAAA,eAAe,EAAE;AACfC,IAAAA,GAAG,EAAE,CACH,kBADG,EAEH,WAFG,EAGH,IAHG,EAGG,KAHH,EAGU,KAHV,EAGiB,KAHjB,EAGwB,MAHxB,EAIH,IAJG,EAIG,KAJH,EAIU,KAJV,EAIiB,KAJjB,EAIwB,MAJxB;AADU;AAfL,CAAd;AAyBA,eAAef,KAAf","sourcesContent":["import BigJS from 'big.js';\nimport toFormat from 'toformat';\n\nconst Big = toFormat(BigJS);\n\nconst utils = {\n  prettyBalance: function (amt, opts = {}) {\n    if (typeof amt !== 'number' && typeof amt !== 'string') {\n      throw new Error(`${amt} is not a number`);\n    }\n\n    // default option values\n    opts = { power: 8, decimal: 2, unit: 'Units', ...opts };\n\n    const bn = Big(amt);\n    const divisor = Big(10).pow(opts.power);\n    const displayed = bn.div(divisor).toFormat(opts.decimal);\n    return `${displayed.toString()} ${opts.unit}`;\n  },\n\n  paramConversion: {\n    num: [\n      'Compact<Balance>',\n      'BalanceOf',\n      'u8', 'u16', 'u32', 'u64', 'u128',\n      'i8', 'i16', 'i32', 'i64', 'i128'\n    ]\n  }\n};\n\nexport default utils;\n"]},"metadata":{},"sourceType":"module"}