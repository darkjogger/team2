{"ast":null,"code":"var _jsxFileName = \"/Users/binggao/Documents/GitHub/team2/lesson3/substrate-front-end-template/src/Transfer.js\";\nimport React, { useState } from 'react';\nimport { Form, Input, Grid, Message, Icon } from 'semantic-ui-react';\nimport { TxButton } from './substrate-lib/components';\nexport default function Main(props) {\n  const [status, setStatus] = useState(null);\n  const [formState, setFormState] = useState({\n    addressTo: null,\n    amount: 0\n  });\n  const {\n    accountPair\n  } = props;\n\n  const onChange = (_, data) => setFormState(prev => ({ ...prev,\n    [data.state]: data.value\n  }));\n\n  const {\n    addressTo,\n    amount\n  } = formState;\n  return React.createElement(Grid.Column, {\n    width: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Transfer\"), React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Message, {\n    compact: true,\n    info: true,\n    size: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    name: \"hand point right\",\n    size: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), \"1 Unit = 1000000000000\"), React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(Input, {\n    fluid: true,\n    label: \"To\",\n    type: \"text\",\n    placeholder: \"address\",\n    state: \"addressTo\",\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  })), React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Input, {\n    fluid: true,\n    label: \"Amount\",\n    type: \"number\",\n    state: \"amount\",\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  })), React.createElement(Form.Field, {\n    style: {\n      textAlign: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(TxButton, {\n    accountPair: accountPair,\n    label: \"Submit\",\n    type: \"SIGNED-TX\",\n    setStatus: setStatus,\n    attrs: {\n      palletRpc: 'balances',\n      callable: 'transfer',\n      inputParams: [addressTo, amount],\n      paramFields: [true, true]\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    style: {\n      overflowWrap: 'break-word'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, status)));\n}","map":{"version":3,"sources":["/Users/binggao/Documents/GitHub/team2/lesson3/substrate-front-end-template/src/Transfer.js"],"names":["React","useState","Form","Input","Grid","Message","Icon","TxButton","Main","props","status","setStatus","formState","setFormState","addressTo","amount","accountPair","onChange","_","data","prev","state","value","textAlign","palletRpc","callable","inputParams","paramFields","overflowWrap"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Form, Input, Grid, Message, Icon } from 'semantic-ui-react';\nimport { TxButton } from './substrate-lib/components';\n\nexport default function Main (props) {\n  const [status, setStatus] = useState(null);\n  const [formState, setFormState] = useState({ addressTo: null, amount: 0 });\n  const { accountPair } = props;\n\n  const onChange = (_, data) =>\n    setFormState(prev => ({ ...prev, [data.state]: data.value }));\n\n  const { addressTo, amount } = formState;\n\n  return (\n    <Grid.Column width={8}>\n      <h1>Transfer</h1>\n      <Form>\n        <Message\n          compact info\n          size='small'\n        >\n          <Icon name='hand point right' size='large'/>\n          1 Unit = 1000000000000\n        </Message>\n        <Form.Field>\n          <Input\n            fluid\n            label='To'\n            type='text'\n            placeholder='address'\n            state='addressTo'\n            onChange={onChange}\n          />\n        </Form.Field>\n        <Form.Field>\n          <Input\n            fluid\n            label='Amount'\n            type='number'\n            state='amount'\n            onChange={onChange}\n          />\n        </Form.Field>\n        <Form.Field style={{ textAlign: 'center' }}>\n          <TxButton\n            accountPair={accountPair}\n            label='Submit'\n            type='SIGNED-TX'\n            setStatus={setStatus}\n            attrs={{\n              palletRpc: 'balances',\n              callable: 'transfer',\n              inputParams: [addressTo, amount],\n              paramFields: [true, true]\n            }}\n          />\n        </Form.Field>\n        <div style={{ overflowWrap: 'break-word' }}>{status}</div>\n      </Form>\n    </Grid.Column>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}