{"ast":null,"code":"var _jsxFileName = \"/Users/binggao/Documents/GitHub/team2/lesson4/substrate-front-end-template/src/PoeModule.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Form, Input, Grid } from 'semantic-ui-react';\nimport { useSubstrate } from './substrate-lib';\nimport { TxButton } from './substrate-lib/components';\nimport { blake2AsHex } from '@polkadot/util-crypto';\n\nfunction Main(props) {\n  const {\n    api\n  } = useSubstrate();\n  const {\n    accountPair\n  } = props; // The transaction submission status\n\n  const [status, setStatus] = useState('');\n  const [digest, setDigest] = useState('');\n  const [owner, setOwner] = useState('');\n  const [blockNumber, setBlockNumber] = useState(0);\n  const [AccountId, setAccountId] = useState('');\n  const [note, setNote] = useState('');\n  const [accountSelected, setAccountSelected] = useState('');\n  useEffect(() => {\n    let unsubscribe;\n    api.query.poeModule.proofs(digest, result => {\n      setOwner(result[0].toString());\n      setBlockNumber(result[1].toNumber());\n    }).then(unsub => {\n      unsubscribe = unsub;\n    }).catch(console.error);\n    return () => unsubscribe && unsubscribe();\n  }, [digest, api.query.poeModule]);\n\n  const handleFileChosen = file => {\n    let fileReader = new FileReader();\n\n    const bufferToDigest = () => {\n      const content = Array.from(new Uint8Array(fileReader.result)).map(b => b.toString(16).padStart(2, '0')).join('');\n      const hash = blake2AsHex(content, 256);\n      setDigest(hash);\n    };\n\n    fileReader.onloadend = bufferToDigest;\n    fileReader.readAsArrayBuffer(file);\n  };\n\n  const handleNoteWriten = c => {\n    const hash = blake2AsHex(c, 256);\n    setNote(hash);\n  };\n\n  return React.createElement(Grid.Column, {\n    width: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Proof of Existence Module\"), React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(Input, {\n    label: \"User Address\",\n    state: \"newValue\",\n    type: \"text\",\n    onChange: (_, {\n      addr\n    }) => setAccountSelected(addr),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })), React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(TxButton, {\n    accountPair: accountPair,\n    label: \"Query User Doc\",\n    setStatus: setStatus,\n    type: \"SIGNED-TX\",\n    attrs: {\n      palletRpc: 'poeModule',\n      callable: 'QueryUserDoc',\n      inputParams: [accountSelected],\n      paramFields: [true]\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  })), React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(Input, {\n    type: \"file\",\n    id: \"file\",\n    label: \"Your File\",\n    onChange: e => handleFileChosen(e.target.files[0]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  })), React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Note:\", React.createElement(Input, {\n    type: \"input\",\n    id: \"note\",\n    lable: \"my note\",\n    onChange: e => handleNoteWriten(e.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  })), React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(Input, {\n    label: \"Transfer to AccountId\",\n    state: \"newValue\",\n    type: \"text\",\n    onChange: (_, {\n      value\n    }) => setAccountId(value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  })), React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(TxButton, {\n    accountPair: accountPair,\n    label: \"Create Claim\",\n    setStatus: setStatus,\n    type: \"SIGNED-TX\",\n    attrs: {\n      palletRpc: 'poeModule',\n      callable: 'createClaim',\n      inputParams: [digest, note],\n      paramFields: [true]\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }), React.createElement(TxButton, {\n    accountPair: accountPair,\n    label: \"Revoke Claim\",\n    setStatus: setStatus,\n    type: \"SIGNED-TX\",\n    attrs: {\n      palletRpc: 'poeModule',\n      callable: 'revokeClaim',\n      inputParams: [digest],\n      paramFields: [true]\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }), React.createElement(TxButton, {\n    accountPair: accountPair,\n    label: \"Transfer Claim\",\n    setStatus: setStatus,\n    type: \"SIGNED-TX\",\n    attrs: {\n      palletRpc: 'poeModule',\n      callable: 'transferClaim',\n      inputParams: [digest, AccountId],\n      paramFields: [true]\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, status), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, `Claim info, owner: ${owner}, blocknumber: ${blockNumber}`)));\n}\n\nexport default function PoeModule(props) {\n  const {\n    api\n  } = useSubstrate();\n  return api.query.poeModule && api.query.poeModule.proofs ? React.createElement(Main, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  })) : null;\n}","map":{"version":3,"sources":["/Users/binggao/Documents/GitHub/team2/lesson4/substrate-front-end-template/src/PoeModule.js"],"names":["React","useEffect","useState","Form","Input","Grid","useSubstrate","TxButton","blake2AsHex","Main","props","api","accountPair","status","setStatus","digest","setDigest","owner","setOwner","blockNumber","setBlockNumber","AccountId","setAccountId","note","setNote","accountSelected","setAccountSelected","unsubscribe","query","poeModule","proofs","result","toString","toNumber","then","unsub","catch","console","error","handleFileChosen","file","fileReader","FileReader","bufferToDigest","content","Array","from","Uint8Array","map","b","padStart","join","hash","onloadend","readAsArrayBuffer","handleNoteWriten","c","_","addr","palletRpc","callable","inputParams","paramFields","e","target","files","value","PoeModule"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Form, Input, Grid } from 'semantic-ui-react';\n\nimport { useSubstrate } from './substrate-lib';\nimport { TxButton } from './substrate-lib/components';\nimport { blake2AsHex } from '@polkadot/util-crypto';\n\nfunction Main (props) {\n  const { api } = useSubstrate();\n  const { accountPair } = props;\n\n  // The transaction submission status\n  const [status, setStatus] = useState('');\n  const [digest, setDigest] = useState('');\n  const [owner, setOwner] = useState('');\n  const [blockNumber, setBlockNumber] = useState(0);\n  const [AccountId, setAccountId] = useState('');\n  const [note, setNote] = useState('');\n\n  const [accountSelected, setAccountSelected] = useState('');\n\n  useEffect(() => {\n    let unsubscribe;\n    api.query.poeModule.proofs(digest, (result) => {\n      setOwner(result[0].toString());\n      setBlockNumber(result[1].toNumber());\n    }).then(unsub => {\n      unsubscribe = unsub;\n    })\n      .catch(console.error);\n\n    return () => unsubscribe && unsubscribe();\n  }, [digest, api.query.poeModule]);\n\n  const handleFileChosen = (file) => {\n    let fileReader = new FileReader();\n\n    const bufferToDigest = () => {\n      const content = Array.from(new Uint8Array(fileReader.result))\n        .map((b) => b.toString(16).padStart(2, '0'))\n        .join('');\n\n      const hash = blake2AsHex(content, 256);\n      setDigest(hash);\n    };\n    fileReader.onloadend = bufferToDigest;\n\n    fileReader.readAsArrayBuffer(file);\n  };\n\n  const handleNoteWriten = (c) => {\n    const hash = blake2AsHex(c, 256);\n    setNote(hash);\n  };\n\n  return (\n    <Grid.Column width={8}>\n      <h1>Proof of Existence Module</h1>\n      <Form>\n      <Form.Field>\n          <Input\n            label ='User Address'\n            state='newValue'\n            type='text'\n            onChange={(_, { addr }) => setAccountSelected(addr)}\n          />\n        </Form.Field>\n\n        <Form.Field>\n          <TxButton\n            accountPair={accountPair}\n            label='Query User Doc'\n            setStatus={setStatus}\n            type='SIGNED-TX'\n            attrs={{\n              palletRpc: 'poeModule',\n              callable: 'QueryUserDoc',\n              inputParams: [accountSelected],\n              paramFields: [true]\n            }}\n          />\n        </Form.Field>\n\n        <Form.Field>\n          <Input\n            type='file'\n            id='file'\n            label='Your File'\n            onChange={ (e) => handleFileChosen(e.target.files[0])}\n          />\n        </Form.Field>\n\n        <Form.Field>\n          Note:\n          <Input\n            type='input'\n            id='note'\n            lable='my note'\n            onChange={(e) => handleNoteWriten(e.value)}\n          />\n        </Form.Field>\n\n        <Form.Field>\n          <Input\n            label ='Transfer to AccountId'\n            state='newValue'\n            type='text'\n            onChange={(_, { value }) => setAccountId(value)}\n          />\n        </Form.Field>\n\n        <Form.Field>\n          <TxButton\n            accountPair={accountPair}\n            label='Create Claim'\n            setStatus={setStatus}\n            type='SIGNED-TX'\n            attrs={{\n              palletRpc: 'poeModule',\n              callable: 'createClaim',\n              inputParams: [digest, note],\n              paramFields: [true]\n            }}\n          />\n\n          <TxButton\n            accountPair={accountPair}\n            label='Revoke Claim'\n            setStatus={setStatus}\n            type='SIGNED-TX'\n            attrs={{\n              palletRpc: 'poeModule',\n              callable: 'revokeClaim',\n              inputParams: [digest],\n              paramFields: [true]\n            }}\n          />\n\n          <TxButton\n            accountPair={accountPair}\n            label='Transfer Claim'\n            setStatus={setStatus}\n            type='SIGNED-TX'\n            attrs={{\n              palletRpc: 'poeModule',\n              callable: 'transferClaim',\n              inputParams: [digest, AccountId],\n              paramFields: [true]\n            }}\n          />\n        </Form.Field>\n\n        <div>{status}</div>\n        <div>{`Claim info, owner: ${owner}, blocknumber: ${blockNumber}`}</div>\n      </Form>\n    </Grid.Column>\n  );\n}\n\nexport default function PoeModule (props) {\n  const { api } = useSubstrate();\n  return (api.query.poeModule && api.query.poeModule.proofs\n    ? <Main {...props} /> : null);\n}\n"]},"metadata":{},"sourceType":"module"}