{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = validateTypes;\n\nvar _types = require(\"@polkadot/types/types\");\n\nvar _create = require(\"@polkadot/types/create\");\n\nvar _flattenUniq = _interopRequireDefault(require(\"./flattenUniq\")); // Copyright 2017-2020 @polkadot/metadata authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\n/** @internal */\n\n\nfunction extractTypes(types) {\n  return types.map(type => {\n    const decoded = (0, _create.getTypeDef)(type);\n\n    switch (decoded.info) {\n      case _types.TypeDefInfo.Plain:\n        return decoded.type;\n\n      case _types.TypeDefInfo.BTreeSet:\n      case _types.TypeDefInfo.Compact:\n      case _types.TypeDefInfo.Option:\n      case _types.TypeDefInfo.Vec:\n      case _types.TypeDefInfo.VecFixed:\n        return extractTypes([decoded.sub.type]);\n\n      case _types.TypeDefInfo.BTreeMap:\n      case _types.TypeDefInfo.HashMap:\n      case _types.TypeDefInfo.Result:\n      case _types.TypeDefInfo.Tuple:\n        return extractTypes(decoded.sub.map(sub => sub.type));\n\n      default:\n        throw new Error(`Unhandled: Unable to create and validate type from ${type}`);\n    }\n  });\n}\n/** @internal */\n\n\nfunction validateTypes(registry, types, throwError) {\n  const missing = (0, _flattenUniq.default)(extractTypes(types)).filter(type => !registry.hasType(type));\n\n  if (missing.length !== 0) {\n    const message = `Unknown types found, no types for ${missing.join(', ')}`;\n\n    if (throwError) {\n      throw new Error(message);\n    } else {\n      console.warn(message);\n    }\n  }\n}","map":null,"metadata":{},"sourceType":"script"}