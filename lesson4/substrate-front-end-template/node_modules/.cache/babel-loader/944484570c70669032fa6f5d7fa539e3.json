{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.overview = overview;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _rxjs = require(\"rxjs\");\n\nvar _operators = require(\"rxjs/operators\");\n\nvar _util = require(\"../util\");\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2.default)(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction parse([ids, didUpdate, infos, pendingSwaps, relayDispatchQueueSizes]) {\n  return ids.map((id, index) => {\n    return {\n      didUpdate: didUpdate.isSome ? !!didUpdate.unwrap().some(paraId => paraId.eq(id)) : false,\n      id,\n      info: _objectSpread({\n        id\n      }, infos[index].unwrapOr(null)),\n      pendingSwapId: pendingSwaps[index].unwrapOr(null),\n      relayDispatchQueueSize: relayDispatchQueueSizes[index][0].toNumber()\n    };\n  });\n}\n\nfunction overview(api) {\n  return (0, _util.memo)(() => {\n    var _api$query$registrar;\n\n    return ((_api$query$registrar = api.query.registrar) === null || _api$query$registrar === void 0 ? void 0 : _api$query$registrar.parachains) && api.query.parachains ? api.query.registrar.parachains().pipe((0, _operators.switchMap)(paraIds => (0, _rxjs.combineLatest)([(0, _rxjs.of)(paraIds), api.query.parachains.didUpdate(), api.query.registrar.paras.multi(paraIds), api.query.registrar.pendingSwap.multi(paraIds), api.query.parachains.relayDispatchQueueSize.multi(paraIds)])), (0, _operators.map)(result => parse(result))) : (0, _rxjs.of)([]);\n  });\n}","map":null,"metadata":{},"sourceType":"script"}