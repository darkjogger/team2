{"ast":null,"code":"import { ledgerUSBVendorId } from \"@ledgerhq/devices\";\nconst ledgerDevices = [{\n  vendorId: ledgerUSBVendorId\n}];\nexport async function requestLedgerDevice() {\n  // $FlowFixMe\n  const device = await navigator.usb.requestDevice({\n    filters: ledgerDevices\n  });\n  return device;\n}\nexport async function getLedgerDevices() {\n  // $FlowFixMe\n  const devices = await navigator.usb.getDevices();\n  return devices.filter(d => d.vendorId === ledgerUSBVendorId);\n}\nexport async function getFirstLedgerDevice() {\n  const existingDevices = await getLedgerDevices();\n  if (existingDevices.length > 0) return existingDevices[0];\n  return requestLedgerDevice();\n}\nexport const isSupported = () => Promise.resolve(!!navigator && // $FlowFixMe\n!!navigator.usb && typeof navigator.usb.getDevices === \"function\");","map":null,"metadata":{},"sourceType":"module"}