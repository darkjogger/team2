{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.indexToId = indexToId;\n\nvar _rxjs = require(\"rxjs\");\n\nvar _operators = require(\"rxjs/operators\");\n\nvar _AccountIndex = require(\"@polkadot/types/generic/AccountIndex\");\n\nvar _util = require(\"@polkadot/util\");\n\nvar _util2 = require(\"../util\"); // Copyright 2017-2020 @polkadot/api-derive authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\n\nfunction queryEnumSet(api, _accountIndex) {\n  const accountIndex = _accountIndex instanceof api.registry.createClass('AccountIndex') ? _accountIndex : api.registry.createType('AccountIndex', _accountIndex);\n  return api.query.indices.enumSet(accountIndex.div(_AccountIndex.ENUMSET_SIZE)).pipe((0, _operators.startWith)([]), (0, _operators.map)(accounts => (accounts || [])[accountIndex.mod(_AccountIndex.ENUMSET_SIZE).toNumber()]));\n} // current\n\n\nfunction query(api, accountIndex) {\n  return api.query.indices.accounts(accountIndex).pipe((0, _operators.map)(optResult => optResult.unwrapOr([])[0]));\n}\n/**\n * @name indexToId\n * @param {( AccountIndex | string )} accountIndex - An accounts index in different formats.\n * @returns Returns the corresponding AccountId.\n * @example\n * <BR>\n *\n * ```javascript\n * api.derive.accounts.indexToId('F7Hs', (accountId) => {\n *   console.log(`The AccountId of F7Hs is ${accountId}`);\n * });\n * ```\n */\n\n\nfunction indexToId(api) {\n  return (0, _util2.memo)(accountIndex => api.query.indices ? (0, _util.isFunction)(api.query.indices.accounts) ? query(api, accountIndex) : queryEnumSet(api, accountIndex) : (0, _rxjs.of)(undefined));\n}","map":null,"metadata":{},"sourceType":"script"}