{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = fromMetadata;\n\nvar _create = require(\"@polkadot/types/create\");\n\nvar _util = require(\"@polkadot/util\"); // Copyright 2017-2020 @polkadot/metadata authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\n/** @internal */\n\n\nfunction fromMetadata(registry, metadata) {\n  return metadata.asLatest.modules.reduce((result, moduleMetadata) => {\n    if (moduleMetadata.constants.isEmpty) {\n      return result;\n    }\n\n    const {\n      name\n    } = moduleMetadata; // For access, we change the index names, i.e. Democracy.EnactmentPeriod -> democracy.enactmentPeriod\n\n    result[(0, _util.stringCamelCase)(name.toString())] = moduleMetadata.constants.reduce((newModule, meta) => {\n      // convert to the natural type as received\n      const type = meta.type.toString();\n      const codec = (0, _create.createTypeUnsafe)(registry, type, [(0, _util.hexToU8a)(meta.value.toHex())]);\n      codec.meta = meta;\n      newModule[(0, _util.stringCamelCase)(meta.name.toString())] = codec;\n      return newModule;\n    }, {});\n    return result;\n  }, {});\n}","map":null,"metadata":{},"sourceType":"script"}