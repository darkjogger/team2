{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.currentPoints = currentPoints;\n\nvar _rxjs = require(\"rxjs\");\n\nvar _operators = require(\"rxjs/operators\");\n\nvar _util = require(\"../util\"); // Copyright 2017-2020 @polkadot/api-derive authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\n\nfunction retrievePointsPrev(api, currentElected) {\n  return api.query.staking.currentEraPointsEarned().pipe((0, _operators.map)(({\n    individual,\n    total\n  }) => api.registry.createType('EraRewardPoints', {\n    individual: new Map(individual.map(points => api.registry.createType('RewardPoint', points)).map((points, index) => [currentElected[index], points])),\n    total\n  })));\n}\n/**\n * @description Retrieve the staking overview, including elected and points earned\n */\n\n\nfunction currentPoints(api) {\n  return (0, _util.memo)(() => api.derive.staking.overview().pipe((0, _operators.switchMap)(({\n    activeEra,\n    nextElected\n  }) => api.query.staking.erasRewardPoints ? api.query.staking.erasRewardPoints(activeEra) : api.query.staking.currentEraPointsEarned ? retrievePointsPrev(api, nextElected) : (0, _rxjs.of)(api.registry.createType('EraRewardPoints')))));\n}","map":null,"metadata":{},"sourceType":"script"}