{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = decodeU8a; // Copyright 2017-2020 @polkadot/types authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\n/**\n * Given an u8a, and an array of Type constructors, decode the u8a against the\n * types, and return an array of decoded values.\n *\n * @param u8a - The u8a to decode.\n * @param types - The array of Constructor to decode the U8a against.\n */\n\nfunction decodeU8a(registry, u8a, _types) {\n  const types = Array.isArray(_types) ? _types : Object.values(_types);\n\n  if (!types.length) {\n    return [];\n  }\n\n  const Type = types[0];\n  const value = new Type(registry, u8a);\n  return [value].concat(decodeU8a(registry, u8a.subarray(value.encodedLength), types.slice(1)));\n}","map":null,"metadata":{},"sourceType":"script"}