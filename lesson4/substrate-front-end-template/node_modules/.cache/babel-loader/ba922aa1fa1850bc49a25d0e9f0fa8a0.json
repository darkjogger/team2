{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0; // Copyright 2017-2020 @polkadot/types authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\n\nvar _default = {\n  rpc: {\n    call: {\n      description: 'Executes a call to a contract',\n      params: [{\n        name: 'callRequest',\n        type: 'ContractCallRequest'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isOptional: true\n      }],\n      type: 'ContractExecResult'\n    },\n    getStorage: {\n      description: 'Returns the value under a specified storage key in a contract',\n      params: [{\n        name: 'address',\n        type: 'AccountId'\n      }, {\n        name: 'key',\n        type: 'H256'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isOptional: true\n      }],\n      type: 'Option<Bytes>'\n    },\n    rentProjection: {\n      description: 'Returns the projected time a given contract will be able to sustain paying its rent',\n      params: [{\n        name: 'address',\n        type: 'AccountId'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isOptional: true\n      }],\n      type: 'Option<BlockNumber>'\n    }\n  },\n  types: {\n    AliveContractInfo: {\n      trieId: 'TrieId',\n      storageSize: 'u32',\n      codeHash: 'CodeHash',\n      rentAllowance: 'Balance',\n      deductBlock: 'BlockNumber',\n      lastWrite: 'Option<BlockNumber>'\n    },\n    CodeHash: 'Hash',\n    ContractCallRequest: {\n      origin: 'AccountId',\n      dest: 'AccountId',\n      value: 'Balance',\n      gasLimit: 'u64',\n      inputData: 'Bytes'\n    },\n    ContractExecResultSuccess: {\n      status: 'u8',\n      data: 'Raw'\n    },\n    ContractExecResult: {\n      _enum: {\n        Success: 'ContractExecResultSuccess',\n        Error: 'Null'\n      }\n    },\n    ContractInfo: {\n      _enum: {\n        Alive: 'AliveContractInfo',\n        Tombstone: 'TombstoneContractInfo'\n      }\n    },\n    ContractStorageKey: '[u8; 32]',\n    Gas: 'u64',\n    PrefabWasmModule: {\n      scheduleVersion: 'Compact<u32>',\n      initial: 'Compact<u32>',\n      maximum: 'Compact<u32>',\n      _reserved: 'PrefabWasmModuleReserved',\n      code: 'Bytes'\n    },\n    PrefabWasmModuleReserved: 'Option<Null>',\n    ScheduleTo212: {\n      version: 'u32',\n      putCodePerByteCost: 'Gas',\n      growMemCost: 'Gas',\n      regularOpCost: 'Gas',\n      returnDataPerByteCost: 'Gas',\n      eventDataPerByteCost: 'Gas',\n      eventPerTopicCost: 'Gas',\n      eventBaseCost: 'Gas',\n      sandboxDataReadCost: 'Gas',\n      sandboxDataWriteCost: 'Gas',\n      maxEventTopics: 'u32',\n      maxStackHeight: 'u32',\n      maxMemoryPages: 'u32',\n      enablePrintln: 'bool',\n      maxSubjectLen: 'u32'\n    },\n    Schedule: {\n      version: 'u32',\n      putCodePerByteCost: 'Gas',\n      growMemCost: 'Gas',\n      regularOpCost: 'Gas',\n      returnDataPerByteCost: 'Gas',\n      eventDataPerByteCost: 'Gas',\n      eventPerTopicCost: 'Gas',\n      eventBaseCost: 'Gas',\n      sandboxDataReadCost: 'Gas',\n      sandboxDataWriteCost: 'Gas',\n      transferCost: 'Gas',\n      maxEventTopics: 'u32',\n      maxStackHeight: 'u32',\n      maxMemoryPages: 'u32',\n      enablePrintln: 'bool',\n      maxSubjectLen: 'u32'\n    },\n    SeedOf: 'Hash',\n    TombstoneContractInfo: 'Hash',\n    TrieId: 'Bytes'\n  }\n};\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}