{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports._eraPrefs = _eraPrefs;\nexports.eraPrefs = eraPrefs;\nexports._erasPrefs = _erasPrefs;\nexports.erasPrefs = erasPrefs;\n\nvar _rxjs = require(\"rxjs\");\n\nvar _operators = require(\"rxjs/operators\");\n\nvar _util = require(\"../util\"); // Copyright 2017-2020 @polkadot/api-derive authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\n\nconst CACHE_KEY = 'eraPrefs';\n\nfunction mapPrefs(era, all) {\n  const validators = {};\n  all.forEach(([key, prefs]) => {\n    validators[key.args[1].toString()] = prefs;\n  });\n  return {\n    era,\n    validators\n  };\n}\n\nfunction _eraPrefs(api) {\n  return (0, _util.memo)((era, withActive) => {\n    const cacheKey = `${CACHE_KEY}-${era.toString()}`;\n    const cached = withActive ? undefined : _util.deriveCache.get(cacheKey);\n    return cached ? (0, _rxjs.of)(cached) : api.query.staking.erasValidatorPrefs.entries(era).pipe((0, _operators.map)(prefs => {\n      const value = mapPrefs(era, prefs);\n      !withActive && _util.deriveCache.set(cacheKey, value);\n      return value;\n    }));\n  });\n}\n\nfunction eraPrefs(api) {\n  return (0, _util.memo)(era => api.derive.staking._eraPrefs(era, true));\n}\n\nfunction _erasPrefs(api) {\n  return (0, _util.memo)((eras, withActive) => eras.length ? (0, _rxjs.combineLatest)(eras.map(era => api.derive.staking._eraPrefs(era, withActive))) : (0, _rxjs.of)([]));\n}\n\nfunction erasPrefs(api) {\n  return (0, _util.memo)((withActive = false) => api.derive.staking.erasHistoric(withActive).pipe((0, _operators.switchMap)(eras => api.derive.staking._erasPrefs(eras, withActive))));\n}","map":null,"metadata":{},"sourceType":"script"}