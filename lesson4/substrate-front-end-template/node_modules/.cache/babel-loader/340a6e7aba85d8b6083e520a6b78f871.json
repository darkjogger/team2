{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.expandExtensionTypes = expandExtensionTypes;\nexports.findUnknownExtensions = findUnknownExtensions;\nexports.defaultExtensions = exports.allExtensions = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _polkadot = _interopRequireDefault(require(\"./polkadot\"));\n\nvar _substrate = _interopRequireDefault(require(\"./substrate\"));\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2.default)(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n} // A mapping of the known signed extensions to the extra fields that they contain. Unlike in the actual extensions,\n// we define the extra fields not as a Tuple, but rather as a struct so they can be named. These will be expanded\n// into the various fields when added to the payload (we only support V4 onwards with these, V3 and earlier are\n// deemded fixed and non-changeable)\n\n\nconst allExtensions = _objectSpread(_objectSpread({}, _substrate.default), _polkadot.default); // the v4 signed extensions (the order is important here, as applied by default)\n\n\nexports.allExtensions = allExtensions;\nconst defaultExtensions = ['CheckVersion', 'CheckGenesis', 'CheckEra', 'CheckNonce', 'CheckWeight', 'ChargeTransactionPayment', 'CheckBlockGasLimit'];\nexports.defaultExtensions = defaultExtensions;\n\nfunction findUnknownExtensions(extensions) {\n  const names = Object.keys(allExtensions);\n  return extensions.filter(key => !names.includes(key));\n}\n\nfunction expandExtensionTypes(extensions, type) {\n  return extensions.map(key => allExtensions[key]).filter(info => !!info).reduce((result, info) => _objectSpread(_objectSpread({}, result), info[type]), {});\n}","map":null,"metadata":{},"sourceType":"script"}