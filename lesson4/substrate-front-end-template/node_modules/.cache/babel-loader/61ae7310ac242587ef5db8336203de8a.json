{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MAX_PASS_LEN = exports.contractRegex = exports.contractKey = exports.addressRegex = exports.addressKey = exports.accountRegex = exports.accountKey = void 0;\n\nvar _util = require(\"@polkadot/util\");\n\nvar _keyring = require(\"@polkadot/keyring\"); // Copyright 2017-2020 @polkadot/ui-keyring authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\n\nconst ACCOUNT_PREFIX = 'account:';\nconst ADDRESS_PREFIX = 'address:';\nconst CONTRACT_PREFIX = 'contract:';\nconst MAX_PASS_LEN = 32;\nexports.MAX_PASS_LEN = MAX_PASS_LEN;\n\nfunction toHex(address) {\n  return (0, _util.u8aToHex)( // When saving pre-checksum changes, ensure that we can decode\n  (0, _keyring.decodeAddress)(address, true));\n}\n\nconst accountKey = address => `${ACCOUNT_PREFIX}${toHex(address)}`;\n\nexports.accountKey = accountKey;\n\nconst addressKey = address => `${ADDRESS_PREFIX}${toHex(address)}`;\n\nexports.addressKey = addressKey;\n\nconst contractKey = address => `${CONTRACT_PREFIX}${toHex(address)}`;\n\nexports.contractKey = contractKey;\nconst accountRegex = new RegExp(`^${ACCOUNT_PREFIX}0x[0-9a-f]*`, '');\nexports.accountRegex = accountRegex;\nconst addressRegex = new RegExp(`^${ADDRESS_PREFIX}0x[0-9a-f]*`, '');\nexports.addressRegex = addressRegex;\nconst contractRegex = new RegExp(`^${CONTRACT_PREFIX}0x[0-9a-f]*`, '');\nexports.contractRegex = contractRegex;","map":null,"metadata":{},"sourceType":"script"}