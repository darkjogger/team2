{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = toV1;\n\nvar _codec = require(\"@polkadot/types/codec\");\n\nvar _util = require(\"@polkadot/util\"); // Copyright 2017-2020 @polkadot/metadata authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\n/** @internal */\n\n\nfunction toV1Calls(registry, {\n  module: {\n    call: {\n      functions\n    }\n  }\n}) {\n  return functions.length ? new _codec.Option(registry, 'Vec<FunctionMetadataV1>', functions) : new _codec.Option(registry, 'Vec<FunctionMetadataV1>');\n}\n/** @internal */\n\n\nfunction toV1Events(registry, metadataV0, prefix) {\n  const events = metadataV0.outerEvent.events.find(event => event[0].eq(prefix));\n  return events ? new _codec.Option(registry, 'Vec<EventMetadataV1>', events[1]) : new _codec.Option(registry, 'Vec<EventMetadataV1>');\n}\n/** @internal */\n\n\nfunction toV1Storage(registry, {\n  storage\n}) {\n  var _storage$unwrapOr;\n\n  return new _codec.Option(registry, 'Vec<StorageFunctionMetadataV1>', (_storage$unwrapOr = storage.unwrapOr(undefined)) === null || _storage$unwrapOr === void 0 ? void 0 : _storage$unwrapOr.functions);\n}\n/** @internal */\n\n\nfunction toV1(registry, metadataV0) {\n  return registry.createType('MetadataV1', {\n    modules: metadataV0.modules.map(mod => {\n      // The prefix of this module (capitalized)\n      const prefix = mod.storage.isSome ? mod.storage.unwrap().prefix.toString() : (0, _util.stringUpperFirst)(mod.prefix.toString()); // If this module doesn't have storage, we just assume the prefix is the name capitalized\n\n      return registry.createType('ModuleMetadataV1', {\n        calls: toV1Calls(registry, mod),\n        events: toV1Events(registry, metadataV0, mod.prefix),\n        name: mod.prefix,\n        // Not capitalized\n        prefix,\n        // Capitalized\n        storage: toV1Storage(registry, mod)\n      });\n    })\n  });\n}","map":null,"metadata":{},"sourceType":"script"}