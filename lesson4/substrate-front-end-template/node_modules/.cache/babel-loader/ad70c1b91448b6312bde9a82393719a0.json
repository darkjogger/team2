{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.memo = memo;\n\nvar _memoizee = _interopRequireDefault(require(\"memoizee\"));\n\nvar _rxjs = require(\"rxjs\");\n\nvar _rxjs2 = require(\"@polkadot/rpc-core/rxjs\"); // Copyright 2017-2020 @polkadot/api-derive authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.v\n// Normalize via JSON.stringify, allow e.g. AccountId -> ss58\n// eslint-disable-next-line @typescript-eslint/unbound-method\n\n\nconst normalizer = JSON.stringify; // Wraps a derive, doing 2 things to optimize calls -\n//   1. creates a memo of the inner fn -> Observable, removing when unsubscribed\n//   2. wraps the observable in a drr() (which includes an unsub delay)\n\n/** @internal */\n\nfunction memo(inner) {\n  const cached = (0, _memoizee.default)((...params) => new _rxjs.Observable(observer => {\n    const sub = inner(...params).subscribe(observer);\n    return () => {\n      cached.delete(...params);\n      sub.unsubscribe();\n    };\n  }).pipe((0, _rxjs2.drr)()), {\n    normalizer\n  });\n  return cached;\n}","map":null,"metadata":{},"sourceType":"script"}