{"ast":null,"code":"\"use strict\"; // Copyright 2017-2020 @polkadot/util authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\n/* eslint-disable no-extend-native */\n\n/* eslint-disable @typescript-eslint/unbound-method */\n\nif (!Array.prototype.fill) {\n  // eslint-disable-next-line no-extend-native,@typescript-eslint/no-explicit-any\n  Array.prototype.fill = function fill(value, start = 0, end) {\n    // Steps 1-2.\n    if (!this) {\n      throw new TypeError('this is null or not defined');\n    } // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n\n\n    const A = Object(this); // Steps 3-5.\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\n    const len = A.length >>> 0; // Steps 6-7.\n\n    const relativeStart = start >> 0; // Step 8.\n\n    let k = relativeStart < 0 ? Math.max(len + relativeStart, 0) : Math.min(relativeStart, len); // Steps 9-10.\n\n    const relativeEnd = end === undefined ? len : end >> 0; // Step 11.\n\n    const final = relativeEnd < 0 ? Math.max(len + relativeEnd, 0) : Math.min(relativeEnd, len); // Step 12.\n\n    while (k < final) {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-member-access\n      A[k] = value;\n      k++;\n    } // Step 13.\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n\n\n    return A;\n  };\n}\n\nif (!Uint8Array.prototype.fill) {\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  Uint8Array.prototype.fill = Array.prototype.fill;\n}","map":null,"metadata":{},"sourceType":"script"}