{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classPrivateFieldLooseBase2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classPrivateFieldLooseBase\"));\n\nvar _classPrivateFieldLooseKey2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classPrivateFieldLooseKey\"));\n\nvar _testing = _interopRequireDefault(require(\"@polkadot/keyring/testing\"));\n\nvar _util = require(\"@polkadot/util\");\n\nvar _accounts2 = _interopRequireDefault(require(\"./observable/accounts\"));\n\nvar _addresses2 = _interopRequireDefault(require(\"./observable/addresses\"));\n\nvar _contracts2 = _interopRequireDefault(require(\"./observable/contracts\"));\n\nvar _development = _interopRequireDefault(require(\"./observable/development\"));\n\nvar _Browser = _interopRequireDefault(require(\"./stores/Browser\"));\n\nvar _defaults = require(\"./defaults\"); // Copyright 2017-2020 @polkadot/ui-keyring authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n// direct import (skip index with all)\n\n\nclass Base {\n  constructor() {\n    Object.defineProperty(this, _accounts, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _addresses, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _contracts, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _keyring, {\n      writable: true,\n      value: void 0\n    });\n    this._store = void 0;\n    this._genesisHash = void 0;\n\n    this.decodeAddress = (key, ignoreChecksum, ss58Format) => {\n      return this.keyring.decodeAddress(key, ignoreChecksum, ss58Format);\n    };\n\n    this.encodeAddress = (key, ss58Format) => {\n      return this.keyring.encodeAddress(key, ss58Format);\n    };\n\n    (0, _classPrivateFieldLooseBase2.default)(this, _accounts)[_accounts] = _accounts2.default;\n    (0, _classPrivateFieldLooseBase2.default)(this, _addresses)[_addresses] = _addresses2.default;\n    (0, _classPrivateFieldLooseBase2.default)(this, _contracts)[_contracts] = _contracts2.default;\n    this._store = new _Browser.default();\n  }\n\n  get accounts() {\n    return (0, _classPrivateFieldLooseBase2.default)(this, _accounts)[_accounts];\n  }\n\n  get addresses() {\n    return (0, _classPrivateFieldLooseBase2.default)(this, _addresses)[_addresses];\n  }\n\n  get contracts() {\n    return (0, _classPrivateFieldLooseBase2.default)(this, _contracts)[_contracts];\n  }\n\n  get keyring() {\n    if ((0, _classPrivateFieldLooseBase2.default)(this, _keyring)[_keyring]) {\n      return (0, _classPrivateFieldLooseBase2.default)(this, _keyring)[_keyring];\n    }\n\n    throw new Error('Keyring should be initialised via \\'loadAll\\' before use');\n  }\n\n  get genesisHash() {\n    return this._genesisHash;\n  }\n\n  getPair(address) {\n    return this.keyring.getPair(address);\n  }\n\n  getPairs() {\n    return this.keyring.getPairs().filter(pair => _development.default.isDevelopment() || pair.meta.isTesting !== true);\n  }\n\n  isAvailable(_address) {\n    const accountsValue = this.accounts.subject.getValue();\n    const addressesValue = this.addresses.subject.getValue();\n    const contractsValue = this.contracts.subject.getValue();\n    const address = (0, _util.isString)(_address) ? _address : this.encodeAddress(_address);\n    return !accountsValue[address] && !addressesValue[address] && !contractsValue[address];\n  }\n\n  isPassValid(password) {\n    return password.length > 0 && password.length <= _defaults.MAX_PASS_LEN;\n  }\n\n  setSS58Format(ss58Format) {\n    if ((0, _classPrivateFieldLooseBase2.default)(this, _keyring)[_keyring] && ss58Format) {\n      (0, _classPrivateFieldLooseBase2.default)(this, _keyring)[_keyring].setSS58Format(ss58Format);\n    }\n  }\n\n  setDevMode(isDevelopment) {\n    _development.default.set(isDevelopment);\n  }\n\n  initKeyring(options) {\n    const keyring = (0, _testing.default)(options, true);\n\n    if ((0, _util.isBoolean)(options.isDevelopment)) {\n      this.setDevMode(options.isDevelopment);\n    }\n\n    (0, _classPrivateFieldLooseBase2.default)(this, _keyring)[_keyring] = keyring;\n    this._genesisHash = options.genesisHash && options.genesisHash.toHex();\n    this._store = options.store || this._store;\n    this.addAccountPairs();\n  }\n\n  addAccountPairs() {\n    this.keyring.getPairs().forEach(({\n      address,\n      meta\n    }) => {\n      this.accounts.add(this._store, address, {\n        address,\n        meta\n      });\n    });\n  }\n\n  addTimestamp(pair) {\n    if (!pair.meta.whenCreated) {\n      pair.setMeta({\n        whenCreated: Date.now()\n      });\n    }\n  }\n\n}\n\nexports.default = Base;\n\nvar _accounts = (0, _classPrivateFieldLooseKey2.default)(\"accounts\");\n\nvar _addresses = (0, _classPrivateFieldLooseKey2.default)(\"addresses\");\n\nvar _contracts = (0, _classPrivateFieldLooseKey2.default)(\"contracts\");\n\nvar _keyring = (0, _classPrivateFieldLooseKey2.default)(\"keyring\");","map":null,"metadata":{},"sourceType":"script"}