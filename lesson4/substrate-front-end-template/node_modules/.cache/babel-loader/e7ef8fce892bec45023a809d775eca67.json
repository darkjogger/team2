{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createDescriptor;\n\nvar _util = require(\"@polkadot/util\"); // Copyright 2017-2020 @polkadot/metadata authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\n/** @internal */\n\n\nfunction createDescriptor(registry, section, sectionIndex, methodIndex, callMetadata) {\n  const callIndex = new Uint8Array([sectionIndex, methodIndex]);\n  const expectedArgs = callMetadata.args;\n  const funcName = (0, _util.stringCamelCase)(callMetadata.name.toString());\n\n  const extrinsicFn = (...args) => {\n    (0, _util.assert)(expectedArgs.length.valueOf() === args.length, `Extrinsic ${section}.${funcName} expects ${expectedArgs.length.valueOf()} arguments, got ${args.length}.`);\n    return registry.createType('Call', {\n      args,\n      callIndex\n    }, callMetadata);\n  };\n\n  extrinsicFn.callIndex = callIndex;\n  extrinsicFn.meta = callMetadata;\n  extrinsicFn.method = funcName;\n  extrinsicFn.section = section;\n\n  extrinsicFn.toJSON = () => callMetadata.toJSON();\n\n  return extrinsicFn;\n}","map":null,"metadata":{},"sourceType":"script"}