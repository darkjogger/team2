{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _classPrivateFieldLooseBase2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classPrivateFieldLooseBase\"));\n\nvar _classPrivateFieldLooseKey2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classPrivateFieldLooseKey\")); // Copyright 2017-2020 @polkadot/util authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\n\nif (typeof TextEncoder === 'undefined') {\n  try {\n    var _temp, _encoder; // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-var-requires\n\n\n    const {\n      TextEncoder: UTE\n    } = require('util'); // eslint-disable-next-line @typescript-eslint/no-explicit-any,@typescript-eslint/no-unsafe-member-access\n\n\n    global.TextEncoder = (_temp = class {\n      constructor() {\n        Object.defineProperty(this, _encoder, {\n          writable: true,\n          value: void 0\n        });\n        (0, _classPrivateFieldLooseBase2.default)(this, _encoder)[_encoder] = new UTE();\n      } // For a Jest 26.0.1 environment, Buffer !== Uint8Array\n\n\n      encode(value) {\n        const encoded = (0, _classPrivateFieldLooseBase2.default)(this, _encoder)[_encoder].encode(value);\n\n        return Uint8Array.from(encoded);\n      }\n\n    }, _encoder = (0, _classPrivateFieldLooseKey2.default)(\"encoder\"), _temp);\n  } catch (error) {// noop\n  }\n}","map":null,"metadata":{},"sourceType":"script"}